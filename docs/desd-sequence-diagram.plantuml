@startuml
actor User
participant "Flask App" as App
participant "DESDResource" as DESD
participant "DESDProcessing" as Processing
participant "ModelAIService" as ModelAI
participant "Result" as ResultModel
participant "ResultStatus" as ResultStatusModel
participant "MongoDB" as Mongo
participant "RQ Queue" as Queue
participant "Worker" as Worker

User -> App: POST /api/v1/desd
App -> DESD: handle request
DESD -> ResultModel: query result by result_id
alt result exists
    DESD -> ResultStatusModel: query result status
    alt status is RUNNING or PENDING
        DESD -> App: return error
        App -> User: 422 Unprocessable Entity
    else status is COMPLETED
        DESD -> ResultStatusModel: update status to PENDING
    end
else result does not exist
    DESD -> ResultModel: create new result
    DESD -> ResultStatusModel: create new result status
end
DESD -> Queue: enqueue process_desd_task
Queue -> Worker: assign task
Worker -> Worker: create app context
Worker -> Mongo: connect to MongoDB
Worker -> ResultModel: query result by result_id
alt result not found
    Worker -> Queue: return error
    Queue -> DESD: return error
    DESD -> ResultStatusModel: update status to FAILED
    DESD -> App: return error
    App -> User: 404 Not Found
else result found
    Worker -> ResultStatusModel: query result status
    alt result status not found
        Worker -> Queue: return error
        Queue -> DESD: return error
        DESD -> ResultStatusModel: update status to FAILED
        DESD -> App: return error
        App -> User: 404 Not Found
    else result status found
        Worker -> ModelAI: initialize models
        Worker -> Worker: save files to temp directory
        Worker -> Processing: process files
        alt file is PDF
            Processing -> Processing: process_pdf()
        else file is TIFF
            Processing -> Processing: process_tiff()
        else file is image
            Processing -> Processing: process_image()
        end
        Processing -> ModelAI: predict()
        ModelAI -> Processing: return prediction
        Processing -> Mongo: save results
        alt processing error
            Processing -> Worker: return error
            Worker -> ResultStatusModel: update status to FAILED
            Worker -> Queue: return error
            Queue -> DESD: return error
            DESD -> App: return error
            App -> User: 500 Internal Server Error
        else processing success
            Processing -> Worker: return success
            Worker -> ResultStatusModel: update status to COMPLETED
            Worker -> Queue: return success
            Queue -> DESD: return success
            DESD -> App: return success
            App -> User: 200 OK
        end
    end
end
@enduml